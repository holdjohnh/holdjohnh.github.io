{"meta":{"title":"Hold Johnh","subtitle":null,"description":"Do something","author":"Hold Johnh","url":"https://holdjohnh.github.io"},"pages":[{"title":"Gallery","date":"2017-08-31T05:56:38.624Z","updated":"2017-08-31T05:56:38.624Z","comments":true,"path":"gallery/index.html","permalink":"https://holdjohnh.github.io/gallery/index.html","excerpt":"","text":"","raw":null,"content":null},{"title":"Links_test","date":"2017-08-31T11:22:39.180Z","updated":"2017-08-29T00:34:34.630Z","comments":true,"path":"links/index.html","permalink":"https://holdjohnh.github.io/links/index.html","excerpt":"","text":"#test links","raw":null,"content":null},{"title":"Timeline","date":"2017-08-31T02:34:54.020Z","updated":"2017-08-31T02:34:54.020Z","comments":true,"path":"timeline/index.html","permalink":"https://holdjohnh.github.io/timeline/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"Github + Hexo 实现的小 Blog","slug":"github + hexo 实现的小博客","date":"2017-01-08T05:35:41.531Z","updated":"2017-08-31T06:14:43.952Z","comments":true,"path":"2017/01/08/github + hexo 实现的小博客/","link":"","permalink":"https://holdjohnh.github.io/2017/01/08/github + hexo 实现的小博客/","excerpt":"","text":"用这个小白灯来祭奠我刚才打了半天的文章（没保存 = = 但也只能怪自己）没什么东西好说的，第一篇文章来写写我做的这个小 blog 吧。现在的时间 2016-11-1 22:31:00 这是准确意义上的第一篇文章，其实零零碎碎时间加起来还是蛮多的。 言归正传～ 前言之前也用 wordpres 搭建过博客，也写了一点小东西，但是都草草结尾，做一个自己的 blog 是大一时候的想法，结果现在都大二了。。。。但不能再迟了，想把自己的想法和一些学习到的东西分享在这个 blog 开始吧。 推荐用 github + hexo 的原因 用github 的原因很简单，学习 git ，之后走上程序员道路比较习惯，而且免费开源。 hexo 是大家的推荐，可以用 Markdown 写文章。 需要（最好）掌握的技能 html 入门就行，要求很低，只要看的懂基本代码，ok了。不会也没事看看w3c. git 的基本使用，只要基本就行，不会也没事看看廖雪峰的教程画个半天时间学习，应该就能掌握基本用法，我就是刚掌握的。 Markdown 的使用，也只要基本使用就行，不会也就看看认识与入门 Markdown，这个很快，花半小时应该就可以简单使用了。 文中出现的命令，Windows用户注意，命令前面有 $ 的表示在Git Bash中执行，没有的在CMD命令窗口执行。Linux和MAC系统在终端下不区分。ps: 我是在 Linux 的环境下完成的 安装 Git 和使用 Github安装git1sudo apt-get install git Windows 用户在官网下载使用即可。 注册 GitHub 打开GitHub官网：https://github.com/ 填写注册信息进行注册操作：没有登录的用户打开网站首页就会显示注册的操作（如图所示），或者是点击 Sign up 按钮进入注册详情页。 填写好注册信息，点击 Sign up for GitHub (注册)按钮后，接下来是选择协议部分。根据自己的情况选择相关的协议，一般人选的都是免费的那一项。 创建仓库 点击创建仓库：点击在右上边的+号和下三角符号按钮，点 new repository。 来写创建仓库信息：仓库名称必须是用户名.github.io（就是这样规定的～），比如我的用户名是oldjohnh，就是oldjohnh.github.io。 创建仓库。 配置 SSH 直接打开终端输入123$ git config --global user.name &quot;你的GitHub用户名&quot;$ git config --global user.email &quot;你的GitHub注册邮箱&quot;$ ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; ps:windows 用户可以在桌面右击”Git Bash here”的选项。直接回车就行了，密码也按回车，好像按三下就行了。然后你会发现在用户文件夹下有个.ssh 或者你发现不了，那就直接打开用户文件夹 /home/user/.ssh 里面有刚刚创建的 ssh 密钥文件 id_rsa 和 id_rsa.pub。 添加公钥到github：点击用户头像，然后点击显示的 Settings (设置)选项；在用户设置栏，点击 SSH and GPG keys 选项，然后点击 New SSH key 按钮； 测试SSH： 1$ ssh -T git@github.com 会弹出 1Are you sure you want to continue connecting (yes/no)? 输入 yes最终输出 1Hi oldjohnh! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 那么你就成功了，接下去才是真正开始了。 ps:id_rsa文件是私钥，要妥善保管，id_rsa.pub是公钥文件。 Hexxoo( ⊙ o ⊙ )啊！，标题好奇怪啊。 创建博客文件夹12mkdir blogcd blog # 切换到blog目录 安装Hexo1234npm install hexo-cli -g #安装Hexohexo init #初始化Hexonpm install #安装依赖hexo server #启动Hexo 启动之后，打开浏览器，在地址栏输入：http://localhost:4000 或者 http://0.0.0.0:4000， 你会看到 Hexo 的示例页面。 新建文章1hexo new test # hexo new &lt;title&gt; 此时在 source_posts 文件夹中便会多出一个文档title.md.123hexo clean #清除生成内容 执行此操作会删除 public 文件夹中的内容。hexo generate #生成静态页面 生成的静态内容在 public 文件夹内。hexo deploy #部署Hexo 这时候，你再打开 http://localhost:4000 你就会发现多了一篇 test 的文章。 调教 hexo 编辑配置文件，关联远程仓库：在编辑器中打开 Hexo 配置文件 _config.yml，找到下面内容： 1234# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: 添加 github 仓库信息： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:oldjohnh/oldjohnh.github.io.git #github仓库地址branch: master # github分支 安装git插件 &amp;&amp; 部署 12npm install hexo-deployer-git --savehexo deploy 执行上面的命令。没有任何显示，这就对了，Unix 的哲学 是“没有消息就是好消息” ，部署就成功了，可以打开 http://&lt;用户名&gt;.github.io 查看。 hexo 命令组合12hexo clean &amp;&amp; hexo g -s，就是清除、生成、启动hexo clean &amp;&amp; hexo g -d，就是清除、生成、部署 非常常用的组合键～ 注意 type 和 repo 前面是有两个空格的 hexo配置文件说明网站配置文件是在根目录下的 _config.yml 文件，是 yaml 格式的。所有的配置项后面的冒号（:）与值之间要有一个空格。可以参考官方配置文件说明，也可以参考下面。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 网站信息title: 网站标题subtitle: 网站副标题description: 网站描述author: 网站作者名字language: #网站语言,默认是英语(en)timezone: #网站时区# URL 网站设置## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: seayxu.github.io #网站的地址root: / #网站的根目录，如果是子文件夹下，则填写子文件夹路径permalink: :year/:month/:day/:title/ #文章链接地址格式 permalink_defaults: # Directory 目录设置source_dir: source #资源文件夹，默认是sourcepublic_dir: public #公共文件夹，默认是publictag_dir: tags #标签文件夹，默认是tagsarchive_dir: archives #档案文件夹，默认是archivescategory_dir: categories #分类文件夹，默认是categoriescode_dir: downloads/code #代码文件夹，默认是downloads/codei18n_dir: :lang #国际化文件夹，默认跟language相同skip_render: [] #不需要渲染的文件夹或文件夹,放在[]中# Writing 文章写作选项new_post_name: :title.md # File name of new postsdefault_layout: post #默认布局模板titlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: #高亮显示 enable: true #默认开启 line_number: true #显示行号，默认开启 auto_detect: false tab_replace:# Category &amp; Tag 分类和标签default_category: uncategorized #默认分类名称category_map:tag_map:# Date / Time format #日期/时间格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DD #日期格式time_format: HH:mm:ss #时间格式# Pagination #分页信息## Set per_page to 0 to disable paginationper_page: 10 #每页显示数量，设置为0表示不启用分页pagination_dir: page #分页文件夹名称# Extensions 扩展## Plugins: https://hexo.io/plugins/ #插件plugins: hexo-generator-feed #RSS订阅插件 hexo-generator-sitemap #sitemap插件## Themes: https://hexo.io/themes/ #主题theme: landscape #主体名称# Deployment 部署## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:SeayXu/seayxu.github.io.git #github仓库地址 branch: master # github分支 主题默认的主题是landscape 如果不喜欢，可以在网上找到自己喜欢的主题，作为自己的主题使用。官方主题地址：传送门 切换主题 将找到的主题源码下载到 themes 文件夹中；比如，jacman 主题在 github 上，通过克隆到 themes 中： 1$ git clone https://github.com/wuchong/jacman themes/jacman 在配置 _config.yml 文件中修改主题配置，比如修改 theme: landscape 为 theme: jacman； 修改主题配置文件_config.yml，此配置文件在主题文件夹下面。相关的配置信息可根据主题文档进行配置。 好，终于结束了 = = 以后可以花一周写一篇 blog 一步一步慢慢来。","raw":null,"content":null,"categories":[{"name":"blog","slug":"blog","permalink":"https://holdjohnh.github.io/categories/blog/"}],"tags":[]},{"title":"shadowsocksR 通过局域网实现 iOS 设备爬墙","slug":"shadowsocksR 通过局域网实现 iOS 设备爬墙","date":"2016-11-03T13:30:26.000Z","updated":"2017-08-31T06:13:23.222Z","comments":true,"path":"2016/11/03/shadowsocksR 通过局域网实现 iOS 设备爬墙/","link":"","permalink":"https://holdjohnh.github.io/2016/11/03/shadowsocksR 通过局域网实现 iOS 设备爬墙/","excerpt":"","text":"每次写东西的时候都分享下的最近看到的图片吧，也当做一种收集吧。 前言赚的第一笔钱是好久前了，一点感慨都没有，无非就是用自己廉价的劳动力去换一点钱，在银行的档案室里面整理着厚重的档案，如果现在的我过去，一定会狠狠的吐槽太老土。。。也曾管理过学校的办公室和实验室，无非都是体力劳动。第一次靠脑子赚钱或者说第一次靠技术赚钱，很惭愧，也就那么几块人民币，但是意义却不一样，这是真正意义上的第一次吧。说出是干什么的，也很惭愧，就是靠卖 ss ，有点尴尬，但慢慢来吧。 shadowsocksR 通过局域网实现 iOS 设备爬墙 时至今日，发现很多技术公司的技术团队，竟然都依然不是标配 Mac。挺震惊讶的。时至今日，有些技术团队还在用百度网盘，也极少使用 VPN ，甚至网络都是家庭 50MBps 的宽带，挺惊讶的。时至今日。。。。 我也不跟风吐槽了，最近出售了 ss ，有人问 iOS 设备怎么翻墙，也很简单。App Store 现在有一大批可以用于翻墙的工具，只不过要付费，无非就 10 元左右的 app ，有好多人就舍不得这几块钱，那么就来分享下一个简单一点的小方法。 在电脑PC ，右键勾选小飞机的选择选项设置，如图: 允许来自局域网的连接，如图: 在 iPhone 或 iPad 上设置，无线局域网，选择自己的路由修改，如图:然后就 ok 了，打开网页试试 youtube，google吧。 pc 的 ip 怎么获取这是一个很简单的问题，可以通过很多方法获得，那就自己百度吧。","raw":null,"content":null,"categories":[{"name":"ss","slug":"ss","permalink":"https://holdjohnh.github.io/categories/ss/"}],"tags":[]},{"title":"好久，终于有了这个简陋的Blog","slug":"好久，终于有了这个简陋的blog","date":"2016-10-30T13:42:04.000Z","updated":"2017-08-31T06:13:56.968Z","comments":true,"path":"2016/10/30/好久，终于有了这个简陋的blog/","link":"","permalink":"https://holdjohnh.github.io/2016/10/30/好久，终于有了这个简陋的blog/","excerpt":"","text":"有点意思哈，还可以用 markdown 来写东西，虽说没怎么学好，只会基本的使用，但慢慢来嘛（已经太迟了）。 Hello Worlddemo 惯例～ Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment hexo命令组合12hexo clean &amp;&amp; hexo g -s，就是清除、生成、启动hexo clean &amp;&amp; hexo g -d，就是清除、生成、部署 More info: jianshu &lt; 该死的简书 最后还要附上这个 link","raw":null,"content":null,"categories":[{"name":"blog","slug":"blog","permalink":"https://holdjohnh.github.io/categories/blog/"}],"tags":[]}]}